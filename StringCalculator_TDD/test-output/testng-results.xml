<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-01-11T00:55:41 IST" name="Default suite" finished-at="2021-01-11T00:55:41 IST" duration-ms="117">
    <groups>
    </groups>
    <test started-at="2021-01-11T00:55:41 IST" name="Default test" finished-at="2021-01-11T00:55:41 IST" duration-ms="117">
      <class name="TestCalculate">
        <test-method is-config="true" signature="init()[pri:0, instance:TestCalculate@623a8092]" started-at="2021-01-11T00:55:41 IST" name="init" finished-at="2021-01-11T00:55:41 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="DelimitersofAnyLength()[pri:0, instance:TestCalculate@623a8092]" started-at="2021-01-11T00:55:41 IST" name="DelimitersofAnyLength" finished-at="2021-01-11T00:55:41 IST" duration-ms="17" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at Calculator.findNegativeInputs(Calculator.java:79)
at Calculator.getSum(Calculator.java:62)
at Calculator.add(Calculator.java:36)
at TestCalculate.DelimitersofAnyLength(TestCalculate.java:55)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DelimitersofAnyLength -->
        <test-method signature="IgnoreNumberGreaterthan1000()[pri:0, instance:TestCalculate@623a8092]" started-at="2021-01-11T00:55:41 IST" name="IgnoreNumberGreaterthan1000" finished-at="2021-01-11T00:55:41 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IgnoreNumberGreaterthan1000 -->
        <test-method signature="emptyStringReturnsZero()[pri:0, instance:TestCalculate@623a8092]" started-at="2021-01-11T00:55:41 IST" name="emptyStringReturnsZero" finished-at="2021-01-11T00:55:41 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyStringReturnsZero -->
        <test-method signature="negativeInputReturnsException()[pri:0, instance:TestCalculate@623a8092]" started-at="2021-01-11T00:55:41 IST" name="negativeInputReturnsException" finished-at="2021-01-11T00:55:41 IST" duration-ms="2" status="PASS">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[negatives not allowed-1,]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: negatives not allowed-1,
at Calculator.findNegativeInputs(Calculator.java:86)
at Calculator.getSum(Calculator.java:62)
at Calculator.add(Calculator.java:36)
at TestCalculate.negativeInputReturnsException(TestCalculate.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- negativeInputReturnsException -->
        <test-method signature="singleValueIsReplied()[pri:0, instance:TestCalculate@623a8092]" started-at="2021-01-11T00:55:41 IST" name="singleValueIsReplied" finished-at="2021-01-11T00:55:41 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleValueIsReplied -->
        <test-method signature="threeNumbersCommaDelimitersBothWaysReturnSum()[pri:0, instance:TestCalculate@623a8092]" started-at="2021-01-11T00:55:41 IST" name="threeNumbersCommaDelimitersBothWaysReturnSum" finished-at="2021-01-11T00:55:41 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- threeNumbersCommaDelimitersBothWaysReturnSum -->
        <test-method signature="twoNumbersCommaDelimitersReturnSum()[pri:0, instance:TestCalculate@623a8092]" started-at="2021-01-11T00:55:41 IST" name="twoNumbersCommaDelimitersReturnSum" finished-at="2021-01-11T00:55:41 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twoNumbersCommaDelimitersReturnSum -->
        <test-method signature="twoNumbersNewLineDelimitersReturnSum()[pri:0, instance:TestCalculate@623a8092]" started-at="2021-01-11T00:55:41 IST" name="twoNumbersNewLineDelimitersReturnSum" finished-at="2021-01-11T00:55:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twoNumbersNewLineDelimitersReturnSum -->
      </class> <!-- TestCalculate -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
